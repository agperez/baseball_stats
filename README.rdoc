== README

This App uses Rails 4 and Ruby 2

== Setup

* The app uses sqlite3 in the dev environment. If you prefer pg or similar, you'll need add the gem and adjust development.rb before continuing.

1. Run <tt>bundle install</tt>

2. Run <tt>rake db:migrate</tt>

3. To populate the database with the provided CSV files (Batting-07-12.csv and Master-small.csv), start the console and run <tt>Statsheet.import_all</tt>.

== Run

Once the DB is populated, you can run the <tt>SeasonStat.all_stats</tt> method to run all the three exercise methods (.most_improved, .team_slugging, and .triple_crown)

If you prefer, you can run each method independently (<tt>SeasonStat.most_improved(year, year)</tt>, <tt>SeasonStat.team_slugging('TEAM', year)</tt>, and <tt>SeasonStat.triple_crown(year)</tt>)

== Tests

There are only rspec tests for the model, as the exercise specified answers should be printed to the console, and thus didn't require test-worthy views or controllers.
* To run the model tests: <tt>rspec spec/models</tt>

== Assumptions

* I decided to combine each player's season data into a seperate, single-row format during import, in addition to storing the raw CSV data. My intention in doing this is to cut down on queries during stat lookup at the expense of import speed, as imports would (in a real life scenerio) only need to be done once per year.

* For the same reasons mentioned above, I also calculated each player's season slugging and percentage and average during import, rather than calculating them at the time of lookup.

* The exercise instructions mention accounting for a future case where pitching stats would be imported. For simplicity, I didn't specifically include pitching stat parameters in the models, but I wrote the Statsheet methods such that these could easily be added, along with a few more lines in the 'import_stats' method, without much difficulty.
